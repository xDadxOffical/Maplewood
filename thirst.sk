command /setthirst <number>:
    permission: dq.dev.setthirst
    trigger:
        set {th::player's uuid} to arg-1
    
command /thirst:
    trigger:
        send "&fYour thirst is &a%{th::player's uuid}%"
        
        
on first join:
    set {th::player's uuid} to 10
    
every 1 second:
	loop all players:
		if {th::player's uuid} < 3:
			apply nausea 5 without any particles to loop-player for 2 seconds
			apply slowness 2 without any particles to loop-player for 2 seconds
		else if {th::player's uuid} > 3:
			remove nausea from loop-player
			remove slowness from loop-player

every 1 second:
    loop all players:
        if {th::player's uuid} = 0:
            kill loop-player
            set {th::player's uuid} to 10
            

            
every 5 minutes:
	loop all players:
		if {th::player's uuid} is not set:
			set {th::player's uuid} to "10"
		else:
			if loop-player is "xDadx":
				stop
			else:
				remove 0.5 from {th::player's uuid}

on placeholderapi placeholder request for the prefix "skript":
	if the identifier is "thirst": # Placeholder is "%skript_thirst%"
		set the result to "%{th::player's uuid}%"
        


# CANTEEEEEENSSSS
on first join:
	set {thirst::player's uuid.yay} to "false"

on right click:
	if event-item is pitcher pod:
		if event-item's name is "&8⮕ &eWater Canteen &a[Common] &8⬅":
			if {th::player's uuid} < 10:
				if lore of event-item contains "&a[Storage: 5/5]":
					set line 3 of lore of player's tool to "&a[Storage: 4/5]"
					add 0.5 to {th::player's uuid}
				if lore of event-item contains "&a[Storage: 4/5]":
					set line 3 of lore of player's tool to "&a[Storage: 3/5]"
					add 0.5 to {th::player's uuid}
				if lore of event-item contains "&a[Storage: 3/5]":
					set line 3 of lore of player's tool to "&a[Storage: 2/5]"
					add 0.5 to {th::player's uuid}
				if lore of event-item contains "&a[Storage: 2/5]":
					set line 3 of lore of player's tool to "&a[Storage: 1/5]"
					add 0.5 to {th::player's uuid}
				if lore of event-item contains "&a[Storage: 1/5]":
					set line 3 of lore of player's tool to "&a[Storage: 0/5]"
					add 0.5 to {th::player's uuid}
				if lore of event-item contains "&a[Storage: 0/5]":
					if {thirst::player's uuid.yay} is "false":
						send "&aYou're out of water!" to player
						set {thirst::player's uuid.yay} to "true"
		else if event-item's name is "&8⮕ &eWater Canteen &a[Infinite] &8⬅":
			if {th::player's uuid} < 10:
				add 0.5 to {th::player's uuid}

on right click on cauldron:
	if event-item's name is "&8⮕ &eWater Canteen &a[Common] &8⬅":
		if lore of event-item contains "&a[Storage: 0/5]":
			set line 3 of lore of player's tool to "&a[Storage: 5/5]"
			set {thirst::player's uuid.yay} to "false"
command /getcanteen <text>:
	permission: dq.dev.thirst.canteen
	trigger:
		if arg-1 is "infinite":
			give player {canteen::infinite}
		if arg-1 is "common":
			give player {canteen::common}
on right click:
	if target block is water:
		if event-item's name is "&8⮕ &eWater Canteen &a[Common] &8⬅":
			if lore of event-item contains "&a[Storage: 0/5]":
				set line 3 of lore of player's tool to "&a[Storage: 5/5]"
				set {thirst::player's uuid.yay} to "false"